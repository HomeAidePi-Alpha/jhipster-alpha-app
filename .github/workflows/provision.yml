name: Provision Github Secrets & Spring Cloud Environments

# This will run when kicked off manually or by trigger
on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment'
        required: true
        default: 'preprod'
      snyk_token:
        description: 'A Snyk Token'
        required: true
        default: ''
      sonar_url:
        description: 'A Sonar Url'
        required: true
        default: 'https://sast-sq.ferguson.com/'
      sonar_token:
        description: 'A Sonar Token'
        required: true
        default: ''
      docker_username:
        description: Docker User Name'
        required: true
        default: ''
      docker_password:
        description: Docker Password'
        required: true
        default: ''
      teams_webhook:
        description: 'Teams Webhook'
        required: false
        default: ''
      slack_webhook:
        description: 'Slack Webhook'
        required: false
        default: ''
      azure_config_json:
        description: 'Remaining Config as Json'
        required: false
        default: '{
          "AZURE_LOCATION": "centralus",
          "AZURE_SERVICE_INSTANCE_NAME": "alpha-sc-service",
          "AZURE_RESOURCE_GROUP_NAME": "HomeAidePi",
          "AZURE_APP_NAME": "dc-sc-alpha-app",
          "AZURE_AD_CLIENT_ID": "",
          "AZURE_AD_TENANT_ID": "",
          "AZURE_SUBSCRIPTION_ID": "",
        }'

jobs:
  provision-github-env:
    name: Provision this Github Environment
    timeout-minutes: 3
    strategy:
      matrix:
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    environment: ${{ github.event.inputs.ENVIRONMENT }}
    # TODO Implement principle of least priv based on need
    permissions:
      contents: 'write'
      id-token: 'write'
      issues: 'write'
      actions: 'write'
      deployments: 'write'
      repository-projects: 'write'

    steps:
    # Checkout the repo
    - name: Check out Repo
      uses: actions/checkout@v3
      
    # - uses: ./.github/workflows/composites/github/env
    #   with:
    #       ENVIRONMENT:  ${{ github.event.inputs.environment }}
    #       GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}
    #       SNYK_TOKEN: ${{ github.event.inputs.snyk_token }}
    #       SONAR_URL: ${{ github.event.inputs.sonar_url }}
    #       SONAR_TOKEN: ${{ github.event.inputs.sonar_token }}
    #       DOCKER_USERNAME: ${{ github.event.inputs.docker_username}}
    #       DOCKER_PASSWORD: ${{ github.event.inputs.docker_password}}
    #       AZURE_CONFIG_JSON: ${{ github.event.inputs.azure_config_json }}
    # - name: echo azure config item
    #   shell: bash
    #   run: |
    #     echo '${{ fromJson( github.event.inputs.azure_config_json).AZURE_APP_NAME }}'
    
      # Provision using composite
    - name: Provision Azure Spring Boot App with Azure Cli
      uses: ./.github/workflows/composites/springCloud/oidc/provision
      with:
        AZURE_AD_CLIENT_ID: ${{ fromJson( github.event.inputs.azure_config_json).AZURE_AD_CLIENT_ID }}
        AZURE_AD_TENANT_ID: ${{ fromJson( github.event.inputs.azure_config_json).AZURE_AD_TENANT_ID }}
        AZURE_SUBSCRIPTION_ID: ${{ fromJson( github.event.inputs.azure_config_json).AZURE_SUBSCRIPTION_ID }}
        AZURE_LOCATION: ${{ fromJson( github.event.inputs.azure_config_json).AZURE_LOCATION }}
        AZURE_SERVICE_INSTANCE_NAME: ${{ fromJson( github.event.inputs.azure_config_json).AZURE_SERVICE_INSTANCE_NAME }}
        AZURE_RESOURCE_GROUP_NAME: ${{ fromJson( github.event.inputs.azure_config_json).AZURE_RESOURCE_GROUP_NAME }}
        AZURE_APP_NAME:  ${{ fromJson( github.event.inputs.azure_config_json).AZURE_APP_NAME }}

  chat-ops:
    name: Notify
    needs: [provision-github-env]
    timeout-minutes: 3
    strategy:
      matrix:
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    environment: ${{ github.event.inputs.ENVIRONMENT }}

    # TODO Implement principle of least priv based on need
    permissions:
      contents: 'write'
      id-token: 'write'
      issues: 'write'
      actions: 'write'
      deployments: 'write'
      repository-projects: 'write'

    steps:
    # Checkout the repo
    - name: Check out Repo
      uses: actions/checkout@v3

    # Send a chat ops notification depending on teams or slack
    - uses: ./.github/workflows/composites/chatops/teams
      with:
          MESSAGE: 'Repo: ${{ github.repository }} Env: ${{  github.event.inputs.environment }} provision completed for commit: ${{ github.sha }}'
          TEAMS_WEBHOOK: ${{ github.event.inputs.teams_webhook }}

    # Send a chat ops notification depending on slack
    - uses: ./.github/workflows/composites/chatops/slack
      with:
          SLACK_USERNAME: ${{ github.event.inputs.user_name }}
          SLACK_WEBHOOK: ${{ github.event.inputs.slack_webhook }}
          SLACK_CHANNEL: general
          SLACK_COLOR: 'good' # or a specific color like 'good' or '#ff00ff'
          SLACK_ICON: https://github.com/HomeAidePi-Alpha/GithubEnvironments-Actions/blob/main/docs/bear-cavalry.png?size=48
          SLACK_MESSAGE: ':rocket: Repo: ${{ github.repository }} Env: ${{  github.event.inputs.environment }} provision completed for commit: ${{ github.sha }}'
          SLACK_TITLE: 'ci-cq-cd completed' 
          
  # TODO Perform quality checks & standards here